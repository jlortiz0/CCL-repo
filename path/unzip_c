print("JZip Unzipping tool")
if not ... then
  printError("Usage: JUnzip <.zip file>")
  return 
end
local file = shell.resolve(...)
if not fs.exists(file) or fs.isDir(file) then
  printError("No such file")
  return
end

local f = fs.open(file, "r")
f.readLine()
f.readLine()
local fat = textutils.unserialise(f.readAll())
f.close()
if type(fat) ~= "table" or table.remove(fat, 1)~="JZip" then
  printError("Not a JZip file.")
  return 
end

print("Please enter directory to unzip to:")
write(shell.dir().."/")
local path = shell.resolve(read().."/")

local num=0
local function decompress(tab, comp, path)
  for k, v in pairs(tab) do
  	if type(v)=="table" then
	  fs.makeDir(fs.combine(path, k))
  	  pcall(function() tab[k]=decompress(v, comp) end)
  	else
  	  for i=1, #comp do
  	   term.clearLine()
    		term.setCursorPos(1, select(2, term.getCursorPos()))
    		write(num.." operations left "..k)
    		sleep()
    		num=num-1
  	  	v=v:gsub("`"..assert(function() if i==1 or i==27 or i==46 then return "%" else return "" end end)()..string.char(i+36), comp[i])
  	  end
	  local fi = fs.open(fs.combine(path, k), "w")
	  fi.writeLine(v)
	  fi.close()
	  v=nil
  	end
  end
end

local mil = table.remove(fat, 1)
local function getCount(tab)
  for k in pairs(tab) do
    if type(tab[k])=="table" then
	  getCount(tab[k])
	else
	  num=num+1
	end
  end
end
getCount(tab)
num=num*#mil
pcall(function() decompress(fat, mil, path) end)
print("Unzipping complete")
