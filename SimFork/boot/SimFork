local apis, apierr=fs.list(system.dir.."/lib/SimFork/")
system.log("Starting SimFork for real..")
for i=1, #apis do
  apierr=os.loadAPI(system.dir.."/lib/SimFork/"..apis[i])
end
if not apierr then
  system.log("API errors on startup!")
  print("Press any key to continue...")
  os.pullEvent("key")
end
--special API loading function
function system.specialAPILoad(_sPath, ...)
  local args={...}
  local sName=fs.getName(_sPath)
  local tEnv = {}
  setmetatable( tEnv, { __index = _ENV } )
  local fnAPI, err = loadfile( _sPath, tEnv )
  if fnAPI then
    local ok, err = pcall(function() fnAPI(table.unpack(args)) end)
    if not ok then
      printError(err)
      return false
    end
  else
    printError(err)
    return false
  end  
  local tAPI = {}
  for k,v in pairs(tEnv) do
    if k~="_ENV" then
      tAPI[k]=v
    end
  end
  _G[sName]=tAPI
  return true
end
system.specialAPILoad(system.dir.."/lib/process", system.dir.."/boot/SimFork", ...)
system.specialAPILoad(system.dir.."/lib/secfs")
--Create some system services processes
--Also create the UI process(not GUI yet, just UI)
process.create(system.dir.."/bin/login")
process.run()
--Shutdown procedure
