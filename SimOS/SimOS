if ...~="-api" then
  term.clear()
  term.setCursorPos(1,1)
end
system = {}
if ...=="-safe" then 
  system.safemode=true
  print("Safemode active.") 
end 
function system.drawMenu(m, pt, n)
  if not m then return end
  pt=pt or ""
  n=n or 1
  local s,h = term.getSize()
  h=h-5
  if n<h then
    s=1
  elseif n>(#m-h+1) then
    s=#m-h+1
  else
    s=n
  end
  while true do
    term.clear()
    term.setCursorPos(1,1)
    print(pt)
    for i=s,s+h do
      if i==n then 
        print("-> ["..m[i].."]")
      else 
        print(m[i])
      end 
      if #m==i then break end
    end
    print("Use arrow keys and enter to select")
    local _,key = os.pullEvent("key")
    if key == 200 and n>1 then 
      n=n-1
      if n<s then s=s-1 end
    elseif key == 208 and n<#m then 
      n=n+1
      if s<#m-h+1 and n>s+h then s=s+1 end
    elseif key == 28 then return n end
  end 
end
if settings.get("SimOS.location") then
  system.mainFile = settings.get("SimOS.location")
else
  local locs = fs.find("*/SimOS")
  if #locs > 1 then
    system.mainFile = locs[system.drawMenu(locs, "Please select the folder where SimOS is installed:")]
    settings.set("SimOS.location", system.mainFile)
    settings.save(".settings")
  else
    system.mainFile=locs[1]
  end
end
system.mainFile = "/"..system.mainFile
system.dir = "/"..fs.combine(system.mainFile, "..")
if not fs.exists(system.dir.."/programs/fileMgr") then
  settings.unset("SimOS.location")
  settings.save(".settings")
  print("There was an error loading SimOS from the specified location.")
  print("SimOS will correct this error when it is restarted.")
  print("Press any key to continue...")
  sleep(1)
  os.pullEvent("key")
  return
end

function system.waitForKey(n)
  while true do
    local _,key = os.pullEvent("key")
    if key==n then return end 
  end 
end

if ...~="-api" then
  if term.isColor() and not ... then
    for i=1, 3 do
  	  sleep(0.15)
  	  term.clear()
      local h = paintutils.loadImage(system.dir.."/logo")
      if i<=2 then
        for _, v in pairs(h) do
      	  for k=1, #v do
      	    if v[k]==1 then
      	  	  v[k]=colors.gray+((i-1)*128)
      	    end
      	  end
        end
      end
      paintutils.drawImage(h, 2, 2)
      term.setBackgroundColor(0x8000)
      term.setTextColor(1)
      print("\n                  by jlortiz\n")
    end
  elseif not ... then
  	local h = paintutils.loadImage(system.dir.."/logo")
  	for i=-9, 2 do
  	  sleep(0.1)
  	  term.clear()
  	  paintutils.drawImage(h, 2, i)
  	  term.setBackgroundColor(0x8000)
      term.setTextColor(1)
      print("\n                  by jlortiz\n")
  	end
  end
  print("Press F8 or Fn+F8 to pause startup...")
  if parallel.waitForAny(function() system.waitForKey(66) end, function() sleep(3) end)==1 then
    local n = system.drawMenu({"Continue boot","Start in safemode", "Boot from Disk", "Exit to CraftOS", "Shutdown"}, "Startup paused.\n")
    if n==3 then
      local disks = {"Don't boot from disk"}
      local dp = {"shell exit"}
      for _,v in pairs({peripheral.find("drive")}) do
        if v.hasData() and fs.exists(v.getMountPath().."/startup") then
          table.insert(dp, v.getMountPath().."/startup")
          if v.getDiskLabel() then
            table.insert(disks, v.getDiskLabel())
          else
            table.insert(disks, "Unlabeled disk with ID "..v.getDiskID())
          end
        end
      end
      n = system.drawMenu(disks, "Select a disk to boot from:\n")
      shell.run(dp[n])
      shell.run(system.mainFile)
      return
    elseif n==5 then os.shutdown()
    else
      if n == 1 then shell.run(system.mainFile) 
      elseif n==2 then shell.run(system.mainFile, "-safe") end
      return
    end 
  end
else system.safemode = true
end

local h = fs.open(system.dir.."/registry", "r")
local registry = textutils.unserialise(h.readAll())
h.close()
local pass = registry.apass
function system.get(value)
  return textutils.unserialize(textutils.serialize(registry[value]))
end
function system.set(value, new)
  registry[value]=textutils.unserialize(textutils.serialize(new))
end
function system.saveSettings()
  local h = fs.open(system.dir.."/registry", "w")
  h.write(textutils.serialise(registry))
  h.close()
end

if fs.isDir(system.dir.."/startup") and not system.safemode then
  for _,v in pairs(fs.list(system.dir.."/startup/")) do
    shell.run("/"..system.dir.."/startup/"..v)
  end
end
if ...=="-api" or system.safemode=="exit" then return end

local n=1
while true do
  local progs = system.get("programs")
  local active = {}
  for i=1,#progs do
    table.insert(active, progs[i][1])
  end
  table.insert(active, "Exit")
  n = system.drawMenu(active, "Welcome to SimOS.\nIt is "..textutils.formatTime(os.time(), system.get("24hr")).." on day "..os.day()..".\n", n)
  if n == #active then
    n=system.drawMenu({"Cancel", "Exit to CraftOS", "Reboot", "Shutdown"}, "Shutdown Menu:\n")
    if n==4 then os.shutdown()
    elseif n==3 then os.reboot()
    elseif n==2 then return end
  else
    term.clear()
    term.setCursorPos(1,1)
    local dir = shell.dir()
    shell.setDir(system.dir.."/programs/")
    shell.run(progs[n][2])
    shell.setDir(dir)
    sleep(system.get("endwait"))
  end 
end
