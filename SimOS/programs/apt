local tArgs = {...}
if not (system and system.mainFile and system.mainFile:find("SimOS")) then shell.run("/SimOS/SimOS", "-api") end
if tArgs[1]=="update" then
  local repos = system.get("apt").repo
  local info = {}
  for i=1, #repos do
    print("Trying "..repos[i])
    rednet.send(repos[i], "update", "SimOSAPT")
    local _, data = rednet.receive("SimOSAPT", 5)
    if type(data)=="table" then
      for i=1, #data do
        info[data[i][1]]={table.unpack(data[i], 2)}
      end
    else
      print("Got no response, try again later or ask the admin.")
    end
  end
  print("Done.")
  system.set("apt", {["repo"]=repos, ["pkl"]=info})
elseif tArgs[1]=="upgrade" then
  local progs = system.get("programs")
  local pkl = system.get("apt").pkl
  local num = 0
  for i=1, #progs do
    if pkl[progs[i][4]] and pkl[progs[i][4]][2]>progs[i][5] then
      if (not tArgs[2]) or progs[i][4]==tArgs[2] then
        num = num + 1
        shell.run("/"..system.dir.."/programs/apt install",progs[i][4],"-upgrade", i)
        print("Upgraded "..progs[i][1])
      end
    end
  end
  if num==0 then tArgs[5]="Donut Save" end
elseif tArgs[1]=="install" and tArgs[2] then
  local pkls = system.get("apt").pkl
  if not pkls[tArgs[2]] then
    print("Could not find package, try apt update.")
    return
  elseif (not tArgs[3]) or tArgs[3]~="-upgrade" then
    local progs = system.get("programs")
    for i=1, #progs do
      if progs[i][4]==tArgs[2] then
        print("Package already installed, did you mean apt upgrade "..tArgs[2].."?")
        return
      end
    end
    print(tArgs[2].." will be installed.(y/n)")
    local _, key = os.pullEvent("key")
    if key~=keys.y then return end
    tArgs[4]=tostring(#progs+1)
  else
    tArgs[5]="Donut Save"
  end
  pack = pkls[tArgs[2]]
  rednet.send(pack[1], tArgs[2], "SimOSAPT")
  local _, data = rednet.receive("SimOSAPT", 5)
  if not data then
    print("Server did not reply, try again or ask an admin.")
  elseif data=="nope" then
    print("Server could not find package, try running apt update.")
  elseif type(data[6])=="string" then
      local f = fs.open(system.dir.."/programs/"..tArgs[2], "w")
      f.write(data[6])
      f.close()
      local progs = system.get("programs")
      tArgs[4]=tonumber(tArgs[4])
      progs[tArgs[4]]=data
      table.remove(progs[tArgs[4]])
      system.set("programs", progs)
  else
      print("Multifile support not implemented.")
      return
  end
  if tArgs[5]~="Donut Save" then
    print("Sucess.")
  end
elseif tArgs[1]=="addrepo" and tArgs[2] then
  rednet.send(tonumber(tArgs[2]), "PING", "SimOSAPT")
  local _, msg = rednet.receive("SimOSAPT", 5)
  if msg~="PONG" then
    print("Not a repo.")
    return
  end
  local repos = system.get("apt")
  table.insert(repos.repo, tonumber(tArgs[2]))
  system.set("apt", repos)
elseif tArgs[1]=="remove" and tArgs[2] then
  local thingy = system.get("programs")
  local i=0
  repeat
    i=i+1
    if thingy[i][4]==tArgs[2] then break end
    if i>#thingy then 
      print("Package not installed, did you mean apt install "..tArgs[2].."?")
      return 
    end
  until i==#thingy+5
  print(thingy[i][1].." will be removed. (y/n)")
  local _,key = os.pullEvent("char")
  if key~="y" then return end
  if thingy[i][3]=="nope" then
    print("APT cannot remove this package, check with your sysadmin.")
    return
  else
    if thingy[i][3]~="rmlistentry" then
      shell.run(thingy[i][3])
    end
    table.remove(thingy, i)
    system.set("programs", thingy)
  end
  print("Done.")
elseif tArgs[1]=="rmrepo" and tArgs[2] then
  tArgs[2] = tonumber(tArgs[2])
  local repos = system.get("apt")
  for i=1, #repos.repo do
  	if repos.repo[i]==tArgs[2] then
  	  table.remove(repos.repo, i)
  	  i=i-1
     break
  	end
  end
  system.set("apt", repos)
else
  tArgs[5]="Donut Save"
  print("apt update - Updates the list of programs.")
  print("apt upgrade - Installs new versions of applications.")
  print("apt addrepo <id> - Adds an apt repository to check for apps.")
  print("apt install <package> - Installs the specified package.")
  print("apt remove <package> - Removes an installed package.")
  print("apt rmrepo <id> - Removes an apt repository.")
  print("apt help - Take a guess.")
  print("This APT has cat powers.")
end

if tArgs[5]~="Donut Save" then
  system.saveSettings()
end
