if not blake then
  if fs.exists("/apis/blake") then
    os.loadAPI("/apis/blake")
  else
    print("Couldn't find the blake hashing API.")
    print("This library is required to log in to the system.")
    if http then
      print("Would you like to try to download it? (y/n)")
      sleep(0.3)
      if select(2, os.pullEvent("char"))=="y" then
        if shell.run("pastebin get XRy3LMBG /apis/blake") then
          print("Done! Please run JMail again.")
        else
          print("Couldn't download. If you wish to retry manually, the pastebin id is XRy3LMBG.")
          print("Download it to /apis/blake")
        end
      else
        print("Okay. If you want to get it yourself, it can be found at pastebin id XRy3LMBG. Download to /apis/blake")
      end
    else
      print("Download pastebin id XRy3LMBG to /apis/blake")
    end
    return
  end
end
local function menu(m, p, n)
  n=n or 1
  p=p or ""
  while true do
    term.clear()
    term.setCursorPos(1,1)
    local lines=write(p)
    for k=1, #m do
      if k==n then
        lines=lines+print("-> ["..m[k].."]")
      else
        lines=lines+print(m[k])
      end
      if lines>15 and k>=n then break end
    end
    local _, key = os.pullEvent("key")
    if key==200 and n>1 then n=n-1
    elseif key==208 and n<#m then n=n+1
    elseif key==28 then return n end
  end
end

print("JMail client 2.6 by jlortiz")
if not ... then print("Usage: JMail <server id or hostname> or JMail scan") return end
local sid = tonumber(...)
if not sid then
  if ...=="scan" then
    print("Scanning for JMail servers...")
    sid={rednet.lookup("JMail")}
  else
    print("Looking for server "..(...).."...")
    sid={rednet.lookup("JMail", ...)}
  end
  if #sid==0 then
    printError("Found no servers.")
    return
  elseif #sid>=2 then
    local cid = {}
    for i=1,#sid do
      rednet.send(sid[i], {
        sProtocol="JMail",
        sType="lookup",
      }, "dns")
      sid[i]={rednet.receive("dns", 2)}
      if (not sid[i][2]) or not sid[i][2].sHostname then
        table.remove(sid, i)
        i=i-1
      else
        table.insert(cid, sid[i][1])
        sid[i]=sid[i][2].sHostname.."(ID "..sid[i][1]..")"
      end
    end
    if #sid==1 then sid=sid[1][1]
    else
      sid=cid[menu(sid, "Found "..#sid.." servers, please select one.\n")]
    end
  else sid=sid[1]
  end
end
rednet.send(sid, {
  sProtocol="JMail",
  sType="lookup",
}, "dns")
local hostname=select(2, rednet.receive("dns", 2)).sHostname

rednet.send(sid, "HELO", "JMail")
local id, msg = rednet.receive("JMail", 10)
if sid ~= id or msg ~= "OK connect" then
  print("Could not connect.")
  if type(msg)=="string" then print("Server error: "..msg) end
  if msg=="Already connected" then
   print("Do you want to force the connection? (y/n)")
   if select(2, os.pullEvent("char"))=="y" then
     rednet.send(sid, "QUIT", "JMail")
     print("Please run JMail "..sid)
   end
  end
  return
end
local getMsg = function()
  local id, msg = rednet.receive("JMail", 5)
  if id ~= sid and id then return getMsg()
  elseif not id then error("Lost connection!", 0)
  elseif id==sid and type(msg)=="table" and msg[1]=="QUIT" then 
    error("Server unexpectedly closed connection.\nReason:"..msg[2], 0)
  else return msg
  end
end

while true do
  local n = 1
  n = menu({"Login", "Register", "Disconnect"}, "Connected to "..hostname.."\n", n)
  if n==3 then rednet.send(sid, "QUIT", "JMail") return
  elseif n==2 then
    rednet.send(sid, "REGA", "JMail")
    if getMsg() == false then
      print("Registration not allowed on this server.")
    else
      write("Username:")
      local un = read()
      rednet.send(sid, {"VRFY", un}, "JMail")
      if getMsg() == true then
        print("Username in use.")
      else
        write("Password:")
        local ps = read("*")
        write("Confirm Pass:")
        if read("*") ~= ps then
          print("Passwords do not match.")
        else
          rednet.send(sid, {"REG", un, blake.digest(ps,un):toHex()}, "JMail")
          if getMsg() == true then
            print("Success. Please log in with your new account.")
          else
            print("Registration failed...")
          end
        end
      end
    end
  elseif n==1 then
    write("Username:")
    local un = read()
    rednet.send(sid, {"VRFY", un}, "JMail")
    if getMsg()==false then
      print("No such user, did you mean to register?")
    else
      rednet.send(sid, "NONCE", "JMail")
      local nonce=getMsg()
      write("Password:")
      local ps=blake.digest(read("*"), un):toHex()
      rednet.send(sid, {"AUTH", un, blake.digest(ps, nonce):toHex(), nonce}, "JMail")
      if getMsg()==false then
        print("Incorrect login.")
      else
        while true do
          n=1
          n=menu({"Get Mail","Send Mail", "Exit", "Change Password"},"Logged in as "..un.." on server "..hostname.."\n", n)
          if n==3 then rednet.send(sid, "QUIT", "JMail") return
          elseif n==2 then
            local msg={"DATA"}
            if tonumber(os.version():match("%d.%d"))>1.7 then
              local day = os.day("utc")
        			  	local year=math.floor(day/365.25)+1970
        						day=day%365.25
        						local months={31,28,31,30,31,30,31,31,30,31,30,31}
        						local mc=1
        						for i=1,12 do
          						if day<months[i] then
            						break
          						end
          						day=day-months[i]
          						mc=mc+1
        						end
        						months={"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
        						months=months[mc]
        						table.insert(msg, day.." "..months.." "..year.." "..textutils.formatTime(os.time("utc"), true).." GMT")
            else
              table.insert(msg, textutils.formatTime(os.time(), true).." on day "..os.day())
            end
            term.clear()
            term.setCursorPos(1,1)
            print("Date: "..msg[2])
            print("To send to multiple people, separate email addresses with spaces")
            print("Enter nothing to cancel")
            write("To: ")
            local recpts=read()
            if recpts then
              table.insert(msg, {})
              if string.find(recpts, " ") then
                for w in string.gmatch(recpts, "[^ \t]+") do
                  table.insert(msg[3], w)
                end
              else
                msg[3][1]=recpts
              end
              write("Subject: ")
              table.insert(msg, read())
              local done,tempMsg,out=false
              repeat
                print("You will now be send to EDIT to type a message.")
                print("Press enter to proceed")
                os.pullEvent("key_up")
                os.pullEvent("key")
                fs.open(".JMailMessage", "a").close()
                shell.run("/rom/programs/edit /.JMailMessage")
                tempMsg=fs.open(".JMailMessage", "r")
                out=tempMsg.readAll()
                tempMsg.close()
                if #out<3 then
                  out="The file seems to be blank. Did you remember to save?"
                end
                print(out)
                print("\nIs this good? (y/n)")
                if select(2, os.pullEvent("char"))=="y" then
                  done=true
                  table.insert(msg, out)
                  fs.delete(".JMailMessage")
                end
              until done
              print("Message sent.")
              rednet.send(sid, msg, "JMail")
            end
            sleep(2.5)
          elseif n==1 then
              n=1
              local path = ""
              while true do
                rednet.send(sid, {"GET", path}, "JMail")
                local ls = getMsg()
                table.insert(ls[1], "Delete Folder")
                table.insert(ls[1], "Exit")
                n=menu(ls[1], "Directory of mail folder /mail/"..path.."\n", n)
                if n==#ls[1] then n=1 break
                elseif n==(#ls[1]-1) then
                  if path ~= "" then
                     print("Confirm that you want to delete folder "..path.." (y/n)")
                     local _, key = os.pullEvent("key")
                     if key==keys.y then
                        rednet.send(sid, {"DEL", path}, "JMail")
                        path = fs.combine(path, "..")
                     end
                  else
                    local m = menu({"Cancel", "Cancel", "Cancel", "Really delete my account"}, "WARNING: Deleting the root account folder will delete your account.\nAre you sure you want to proceed?\n")
                    if m==4 then
                      rednet.send(sid, {"DEL", ".."}, "JMail")
                      rednet.send(sid, "QUIT", "JMail")
                      return
                    end
                  end
                else
                  if ls[2][n]==true then
                      path = fs.combine(path, ls[1][n])
                  else
                      rednet.send(sid, {"GET", fs.combine(path, ls[1][n])}, "JMail")
                      local thing=textutils.unserialize(getMsg())
                      print(textutils.serialize(thing))
                      local thin="Date: "..thing[1].."\nFrom: "..thing[2].."\nTo: "..table.concat(thing[3], ", ").."\nSubject: "..thing[4].."\n\n"..thing[5]
                      local m=menu({"Delete", "Move", "Reply", "Keep"}, thin.."\n\n", 4)
                      if m==1 then
                          rednet.send(sid, {"DEL", fs.combine(path, ls[1][n])}, "JMail")
                      elseif m==2 then
                          print("Folder to move to:")
                          rednet.send(sid, {"MV", fs.combine(path, ls[1][n]), fs.combine(path, read()).."/"..ls[1][n]}, "JMail")
                      elseif m==3 then
                        if #thing[3]>1 then
                          m=menu({"Cancel", "Reply All", "Reply"}, thin.."\n\n", 3)
                        end
                        local done, f, tmp
                        while not done do
                          fs.open(".JMailServer", "a").close()
                          shell.run("edit /.JMailServer")
                          f=fs.open(".JMailServer", "r")
                          tmp=f.readAll()
                          f.close()
                          if #tmp<3 then
                            print("Did you forget to save?")
                          end
                          print(tmp)
                          print("\nIs this good(y/n)")
                          if select(2, os.pullEvent("char"))=="y" then
                            done=true
                            fs.delete(".JMailServer")
                            if m==3 then thing[3]={thing[2]} end
                            if tonumber(os.version():match("%d.%d"))>1.7 then
                        					 local day = os.day("utc")
                      			  			local year=math.floor(day/365.25)+1970
                          				day=day%365.25
                        						local months={31,28,31,30,31,30,31,31,30,31,30,31}
                        						local mc=1
                        						for i=1,12 do
                          						if day<months[i] then
                            						break
                            				end
                          						day=day-months[i]
                          						mc=mc+1
                        						end
                        						months={"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
                        						months=months[mc]
                        						f=day.." "..months.." "..year.." "..textutils.formatTime(os.time("utc"), true).." GMT"
                        				else
                     	   			  f=textutils.formatTime(os.time(), true).." on day "..os.day()
                       					end
                            print(f, un.."@"..hostname, thing[3], "Re:"..thing[4])
                            rednet.send(sid, {"DATA", {f, un.."@"..hostname, thing[3], "Re:"..thing[4], tmp}}, "JMail")
                            print("Mail sent!")
                            sleep(2.5)
                          end
                        end
                      end
                  end
               end
            end
          elseif n==4 then
            print("Type current password:")
            local ops = read("*")
            write("New Password:")
            local nps = read("*")
            write("Confirm:")
            if read("*") == nps then
              rednet.send(sid, {"PC", blake.digest(ops,un):toHex(), blake.digest(nps, un):toHex()}, "JMail")
              if getMsg() then
                print("Success.")
              else
                print("Passchange failed...")
              end
            else
              print("Passwords do not match.")
            end
            sleep(2.5)
          end
        end
      end
    end
  end
  sleep(2)
end
