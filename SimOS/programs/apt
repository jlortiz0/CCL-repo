local tArgs = {...}
if not (system and system.mainFile and system.mainFile:find("SimOS")) then shell.run("/SimOS/SimOS", "-api") end
local function getPkl()
  local repos = system.get("apt").repo
  local info = {}
  for i=1, #repos do
    rednet.send(repos[i], "update", "SimOSAPT")
    local _, data = rednet.receive("SimOSAPT", 5)
    if type(data)=="table" then
      for k, v in pairs(data) do
        info[k]=v
      end
	else
	  table.remove(repos, i)
	  i=i-1
    end
  end
  return info
end
if tArgs[1]=="upgrade" then
  local progs = system.get("programs")
  local pkl = getPkl()
  local num = 0
  for i=1, #progs do
    if pkl[progs[i][4]] and pkl[progs[i][4]][2]>progs[i][5] then
      if (not tArgs[2]) or progs[i][4]==tArgs[2] then
	    table.remove(progs, i)
        num = num + 1
        shell.run(shell.getRunningProgram(), "install", progs[i][4], "-f")
        print("Upgraded "..progs[i][1])
      end
    end
  end
  if num==0 then tArgs[5]="Donut Save" end
elseif tArgs[1]=="install" and tArgs[2] then
  local pkls = getPkl()
  if not pkls[tArgs[2]] then
    print("Could not find package.")
    return
  elseif (not tArgs[3]) or tArgs[3]~="-f" then
    local progs = system.get("apt").installed
    if progs[tArgs[2]] then
      print("Package already installed, did you mean apt upgrade "..tArgs[2].."?")
      return
    end
    print(tArgs[2].." will be installed.(y/n)")
    local _, key = os.pullEvent("key")
    if key~=keys.y then return end
  else
    tArgs[5]="Donut Save"
  end
  pack = pkls[tArgs[2]]
  rednet.send(pack[1], tArgs[2], "SimOSAPT")
  local _, data = rednet.receive("SimOSAPT", 5)
  if not data then
    print("Server did not reply, try again or ask an admin.")
  elseif data=="nope" then
    print("Server could not find package. This shouldn't happen.")
  elseif type(data[6])=="string" then
    local f = fs.open(system.dir.."/programs/"..tArgs[2], "w")
    f.write(data[6])
    f.close()
  else
    local function unzip(dir, tab)
      for k, v in pairs(tab) do
        if type(v)=="table" then
          fs.makeDir(fs.combine(dir, k))
          unzip(fs.combine(dir, k), v)
        else
          local h = fs.open(fs.combine(dir, k), "w")
          h.write(v)
          h.close()
        end
      end
    end
    unzip(system.dir.."/programs/"..data[4], data[6])
  end
  if tArgs[5]~="Donut Save" then
    local progs = system.get("programs")
    table.insert(progs, data)
    table.remove(progs[#progs])
    system.set("programs", progs)
	local inst = system.get("apt")
	inst.installed[tArgs[2]]=true
	system.set("apt", inst)
    print("Success.")
    system.log("APT installed "..tArgs[2])
  end
elseif tArgs[1]=="addrepo" and tArgs[2] then
  rednet.send(tonumber(tArgs[2]), "PING", "SimOSAPT")
  local _, msg = rednet.receive("SimOSAPT", 5)
  if msg~="PONG" then
    print("Not a repo.")
    return
  end
  local repos = system.get("apt")
  table.insert(repos.repo, tonumber(tArgs[2]))
  system.set("apt", repos)
  system.log("Added APT repo "..tArgs[2])
elseif tArgs[1]=="remove" and tArgs[2] then
  local thingy = system.get("programs")
  local i=0
  if not system.get("programs")[tArgs[2]] then 
    print("Package not installed, did you mean apt install "..tArgs[2].."?")
    return 
  end
  repeat
    i=i+1
    if thingy[i][4]==tArgs[2] then break end
  until i==#thingy
  print(thingy[i][1].." will be removed. (y/n)")
  local _,key = os.pullEvent("char")
  if key~="y" then return end
  if thingy[i][3]=="nope" then
    print("APT cannot remove this package. It may be integral to the system.")
    return
  else
    if thingy[i][3]~="rmlistentry" then
      shell.run(thingy[i][3])
    end
    table.remove(thingy, i)
    system.set("programs", thingy)
  end
  local inst = system.get("apt")
  inst.installed[tArgs[2]]=nil
  system.set("apt", inst)
  print("Done.")
  system.log("APT removed "..tArgs[2])
elseif tArgs[1]=="rmrepo" and tArgs[2] then
  tArgs[2] = tonumber(tArgs[2])
  local repos = system.get("apt")
  for i=1, #repos.repo do
  	if repos.repo[i]==tArgs[2] then
  	  table.remove(repos.repo, i)
     system.log("Removed APT repo "..tArgs[2])
  	  i=i-1
     break
  	end
  end
  system.set("apt", repos)
else
  tArgs[5]="Donut Save"
  print("apt upgrade [appid] - Installs new versions of applications.")
  print("apt addrepo <id> - Adds an apt repository to check for apps.")
  print("apt install <package> - Installs the specified package.")
  print("apt remove <package> - Removes an installed package.")
  print("apt rmrepo <id> - Removes an apt repository.")
  print("apt help - Take a guess.")
end

if tArgs[5]~="Donut Save" then
  system.saveSettings()
end
