local loc
if shell then loc=shell.getRunningProgram() end

--fs permission setup
local nativefs={}
for k,v in pairs(fs) do
  nativefs[k]=v
end
local fsperms, h
h=fs.open(loc.."/etc/fsperms", "r")
fsperms=textutils.unserialize(h.realAll())
h.close()

local function resolvePath(path, op)
	path=nativefs.combine(path, ".")
  local dirs={nativefs.getName(path)}
  if dirs[1]=="root" then dirs={""} end
  while #path>0 do
    table.insert(dirs, 1, nativefs.getName(nativefs.getDir(path)))
    if dirs[1]==".." then dirs[1]="" end
    path=nativefs.getDir(path)
  end
  table.remove(dirs, 1)
  local current=perms
  for i=1, #dirs do
    if i==#dirs and op=="del" then
      table.remove(current, dirs[i])
      return
    end
    if not current[dirs[i]] then return false end
    current=current[dirs[i]]
  end
  return current
end
local function deletePath(path)
  resolvePath(path, "del")
end
function fs.list(...)
  local tab=resolvePath(...)
  if not tab then error("Not a directory "..(...), 2) end
  if tonumber(string.sub(tostring(tab[1]),3))>=2 then
    return nativefs.list(...)
  elseif tonumber(string.sub(tostring(tab[1]),2,2))>=2 and select(3, system.username())==tab[3] then
    return nativefs.list(...)
  elseif tonumber(string.sub(tostring(tab[1]),1,1))>=2 and select(2, system.username())==tab[2] then
    return nativefs.list(...)
  else
    error("Access denied",2)
  end
end
function fs.delete(...)
	local tab, r=resolvePath(...)
	if not tab then return end
  if tonumber(string.sub(tostring(tab[1]),3))%2==1 then
    nativefs.delete(...)
  elseif tonumber(string.sub(tostring(tab[1]),2,2))%2==1 and select(3, system.username())==tab[3] then
    nativefs.delete(...)
  elseif tonumber(string.sub(tostring(tab[1]),1,1))%2==1 and select(2, system.username())==tab[2] then
    nativefs.delete(...)
  else
    error("Access denied",2)
  end
  deletePath(...)
end
function fs.isReadOnly(...)
	local tab=resolvePath(...)
	if not tab then return fs.isReadOnly(fs.getDir(...)) end
  if tonumber(string.sub(tostring(tab[1]),3))%2==1 then
    return false
  elseif tonumber(string.sub(tostring(tab[1]),2,2))%2==1 and select(3, system.username())==tab[3] then
    return false
  elseif tonumber(string.sub(tostring(tab[1]),1,1))%2==1 and select(2, system.username())==tab[2] then
    return false
  else
    return true
  end
end
function fs.copy(p1, p2)
	local tab=resolvePath(p2)
	if not tab then error("No such file", 2) end
  if tonumber(string.sub(tostring(tab[1]),3))>=2 or (tonumber(string.sub(tostring(tab[1]),2,2))>=2 and select(3, system.username())==tab[3]) or (tonumber(string.sub(tostring(tab[1]),1,1))>=2 and select(2, system.username())==tab[2]) then
  	tab=resolvePath(p1)
  	if tonumber(string.sub(tostring(tab[1]),3))%2==1 then
    	nativefs.copy(p1, p2)
  	elseif tonumber(string.sub(tostring(tab[1]),2,2))%2==1 and select(3, system.username())==tab[3] then
    	nativefs.copy(p1, p2)
  	elseif tonumber(string.sub(tostring(tab[1]),1,1))%2==1 and select(2, system.username())==tab[2] then
    	nativefs.copy(p1,p2)
  	else
    	error("Access denied", 2)
  	end
  	--custom copy logic
  else
    error("Access denied",2)
  end
end
function fs.move(p1, p2)
	local tab=resolvePath(p2)
	if not tab then error("No such file", 2) end
  if tonumber(string.sub(tostring(tab[1]),3))%2==1 or (tonumber(string.sub(tostring(tab[1]),2,2))%2==1 and select(3, system.username())==tab[3]) or (tonumber(string.sub(tostring(tab[1]),1,1))%2==1 and select(2, system.username())==tab[2]) then
  	tab=resolvePath(p1)
  	if tonumber(string.sub(tostring(tab[1]),3))%2==1 then
    	nativefs.move(p1, p2)
  	elseif tonumber(string.sub(tostring(tab[1]),2,2))%2==1 and select(3, system.username())==tab[3] then
    	nativefs.move(p1, p2)
  	elseif tonumber(string.sub(tostring(tab[1]),1,1))%2==1 and select(2, system.username())==tab[2] then
    	nativefs.move(p1,p2)
  	else
    	return fs.copy(p1, p2)
  	end
  else
    error("Access denied",2)
  end
  --custom perms copy logic
  deletePath(p1)
end
function fs.open(path, mode)
	if (not fs.exists(path)) and mode:find("r") then error("No such file", 2) end
	local tab=resolvePath(path)
	local temppath, r=path
	while not tab do
		temppath=fs.getDir(path)
		tab=resolvePath(temppath)
	end
 while path~=temppath do
   
 end
	if mode=="r" or mode=="rb" then
		if tonumber(string.sub(tostring(tab[1]),3))>=2 then
    	return nativefs.open(path, mode)
  	elseif tonumber(string.sub(tostring(tab[1]),2,2))>=2 and select(3, system.username())==tab[3] then
    	return nativefs.open(path, mode)
  	elseif tonumber(string.sub(tostring(tab[1]),1,1))>=2 and select(2, system.username())==tab[2] then
    	return nativefs.open(path, mode)
  	else
    	error("Access denied",2)
  	end
	elseif mode=="w" or mode=="a" or mode=="wb" or mode=="ab" then
	if not fs.exists(path) then
  
	end
		if tonumber(string.sub(tostring(tab[1]),3))%2==1 then
    	r=nativefs.open(path, mode)
  	elseif tonumber(string.sub(tostring(tab[1]),2,2))%2==1 and select(3, system.username())==tab[3] then
    	r=nativefs.open(path, mode)
  	elseif tonumber(string.sub(tostring(tab[1]),1,1))%2==1 and select(2, system.username())==tab[2] then
    	r=nativefs.open(path, mode)
  	else
  		deletePath(path)
    	error("Access denied", 2)
  	end
	else
		error("Unsupported mode", 2)
	end
end
