print("JZip Unzipping tool")
if not ... then
  printError("Usage: JUnzip <.zip file>")
  return 
end
local file = shell.resolve(...)
if not fs.exists(file) or fs.isDir(file) then
  printError("No such file")
  return
end

local f = fs.open(file, "r")
f.readLine()
f.readLine()
local fat = textutils.unserialise(f.readAll())
f.close()
if type(fat) ~= "table" or table.remove(fat, 1)~="JZip" then
  printError("Not a JZip file.")
  return 
end

print("Please enter directory to unzip to:")
write(shell.dir().."/")
local path = shell.resolve(read().."/")

local num=0
local er = {[1]=true, [4]=true, [5]=true, [6]=true, [7]=true, [9]=true, [10]=true, [27]=true, [58]=true, [55]=true}
local function fix(i) if er[i] then return "%" else return "" end end
local function decompress(tab, comp, path)
  for k, v in pairs(tab) do
  	if type(v)=="table" then
	    fs.makeDir(fs.combine(path, k))
  	  decompress(v, comp, fs.combine(path, k))
  	else
  	  for i=1, #comp do
	      term.clearLine()
	 	    term.setCursorPos(1, select(2, term.getCursorPos()))
 		    write(num.." operations left(This number may be inaccurate)")
		     num=num-1
  	  	 v=v:gsub("`"..fix(i)..string.char(i+36), comp[i])
       os.queueEvent("unzip_event")
       os.pullEvent()
  	  end
	  local fi = fs.open(fs.combine(path, k), "w")
	  fi.writeLine(v)
	  fi.close()
	  v=nil
  	end
  end
end

local mil = table.remove(fat, 1)
for i=1, #mil do
  mil[i]=string.gsub(mil[i], "%%%[", "[")
  mil[i]=string.gsub(mil[i], "%%%(", "(")
  mil[i]=string.gsub(mil[i], "%%%.", ".")
  mil[i]=string.gsub(mil[i], "%%%^", "^")
  mil[i]=string.gsub(mil[i], "%%%%", "%")
  mil[i]=string.gsub(mil[i], "%%%)", ")")
  mil[i]=string.gsub(mil[i], "%%%$", "$")
  mil[i]=string.gsub(mil[i], "%%%*", "*")
  mil[i]=string.gsub(mil[i], "%%%-", "-")
  mil[i]=string.gsub(mil[i], "%%%+", "+")
  mil[i]=string.gsub(mil[i], "%%%?", "?")
end
local function getCount(tab)
  for k,v in pairs(tab) do
    if type(v)=="table" then
	     getCount(v)
	   else
	     num=num+1
	   end
  end
end
getCount(tab)
num=num*#mil/2
pcall(function() decompress(fat, mil, path) end)
print("Unzipping complete")
