local function menu(m, p, n)
  n=n or 1
  p=p or ""
  while true do
    term.clear()
    term.setCursorPos(1,1)
    local lines=write(p)
    for k=1, #m do
      if k==n then
        lines=lines+print("-> ["..m[k].."]")
      else
        lines=lines+print(m[k])
      end
      if lines>15 and k>=n then break end
    end
    local _, key = os.pullEvent("key")
    if key==200 and n>1 then n=n-1
    elseif key==208 and n<#m then n=n+1
    elseif key==28 then return n end
  end
end

print("JMail client 2.4 by jlortiz")
if not ... then print("Usage: JMail <server id or hostname> or JMail scan") return end
local sid = tonumber(...)
if not sid then
  if ...=="scan" then
    print("Scanning for JMail servers...")
    sid={rednet.lookup("JMail")}
  else
    print("Looking for server "..(...).."...")
    sid={rednet.lookup("JMail", ...)}
  end
  if #sid==0 then
    printError("Found no servers.")
    return
  elseif #sid>=2 then
    local cid = {}
    for i=1,#sid do
      rednet.send(sid[i], {
        sProtocol="JMail",
        sType="lookup",
      }, "dns")
      sid[i]={rednet.receive("dns", 2)}
      if (not sid[i][2]) or not sid[i][2].sHostname then
        table.remove(sid, i)
        i=i-1
      else
        table.insert(cid, sid[i][1])
        sid[i]=sid[i][2].sHostname.."(ID "..sid[i][1]..")"
      end
    end
    if #sid==1 then sid=sid[1][1]
    else
      sid=cid[menu(sid, "Found "..#sid.." servers, please select one.\n")]
    end
  else sid=sid[1]
  end
end
rednet.send(sid, {
  sProtocol="JMail",
  sType="lookup",
}, "dns")
local hostname=select(2, rednet.receive("dns", 2)).sHostname

rednet.send(sid, "HELO", "JMail")
local id, msg = rednet.receive("JMail", 10)
if sid ~= id or msg ~= "OK connect" then
  print("Could not connect.")
  if type(msg)=="string" then print("Server error: "..msg) end
  return
end
local getMsg = function()
  local id, msg = rednet.receive("JMail", 5)
  if id ~= sid and id then return getMsg()
  elseif not id then error("Lost connection!", 0)
  elseif id==sid and type(msg)=="table" and msg[1]=="QUIT" then 
  error("Server unexpectedly closed connection.\nReason:"..msg[2], 0)
  else return msg
  end
end

while true do
  local n = 1
  n = menu({"Login", "Register", "Disconnect"}, "Connected to "..hostname.."\n", n)
  if n==3 then rednet.send(sid, "QUIT", "JMail") return
  elseif n==2 then
    rednet.send(sid, "REGA", "JMail")
    if getMsg() == false then
      print("Registration not allowed on this server.")
    else
      write("Username:")
      local un = read()
      rednet.send(sid, {"VRFY", un}, "JMail")
      if getMsg() == true then
        print("Username in use.")
      else
        write("Password:")
        local ps = read("*")
        write("Confirm Pass:")
        if read("*") ~= ps then
          print("Passwords do not match.")
        else
          rednet.send(sid, {"REG", un, ps}, "JMail")
          if getMsg() == true then
            print("Success.")
          else
            print("Registration failed...")
          end
        end
      end
    end
  elseif n==1 then
    write("Username:")
    local un = read()
    rednet.send(sid, {"VRFY", un}, "JMail")
    if getMsg()==false then
      print("No such user, did you mean to register?")
    else
      write("Password:")
      local ps=read("*")
      rednet.send(sid, {"AUTH", un, ps}, "JMail")
      if getMsg()==false then
        print("Incorrect login.")
      else
        while true do
          n=1
          n=menu({"Get Mail","Send Mail", "Exit", "Change Password"},"Logged in as "..un.." on server "..hostname.."\n", n)
          if n==3 then rednet.send(sid, "QUIT", "JMail") return
          elseif n==2 then
            write("Mail Server of Recepient:")
            local msg={"DATA", read()}
            local thing
            write("Recepient username:")
            table.insert(msg, read())
            if msg[2]==sid then
              rednet.send(sid, {"VRFY", msg[3]}, "JMail")
              thing = getMsg()
            else
              thing = true
            end
            if thing==true then
              write("Subject:")
              table.insert(msg, read())
              table.insert(msg, "")
              print("Body, up to 10 lines")
              print("Type 'END' on a blank line to end message.")
              for i=1, 10 do
                local txt=read()
                if txt=="END" then break end
                msg[5]=(msg[5] or "")..txt.."\n"
              end
              print("Sending message...")
              rednet.send(sid, msg, "JMail")
              print(getMsg())
            else
              print("No such user.")
            end
            sleep(2.5)
          elseif n==1 then
              n=1
              local path = ""
              while true do
                rednet.send(sid, {"GET", path}, "JMail")
                local ls = getMsg()
                table.insert(ls[1], "Delete Folder")
                table.insert(ls[1], "Exit")
                n=menu(ls[1], "Directory of mail folder /mail/"..path.."\n", n)
                if n==#ls[1] then n=1 break
                elseif n==(#ls[1]-1) then
                  if path ~= "" then
                     print("Confirm that you want to delete folder "..path.." (y/n)")
                     local _, key = os.pullEvent("key")
                     if key==keys.y then
                        rednet.send(sid, {"DEL", path}, "JMail")
                        path = fs.combine(path, "..")
                     end
                  else
                    local m = menu({"Cancel", "Cancel", "Cancel", "Really delete my account"}, "WARNING: Deleting the root account folder will delete your account.\nAre you sure you want to proceed?\n")
                    if m==4 then
                      rednet.send(sid, {"DEL", ".."}, "JMail")
                      rednet.send(sid, "QUIT", "JMail")
                      return
                    end
                  end
                else
                  if ls[2][n]==true then
                      path = fs.combine(path, ls[1][n])
                  else
                      rednet.send(sid, {"GET", fs.combine(path, ls[1][n])}, "JMail")
                      local m=menu({"Delete", "Move", "Keep"}, getMsg().."\n", 3)
                      if m==1 then
                          rednet.send(sid, {"DEL", fs.combine(path, ls[1][n])}, "JMail")
                      elseif m==2 then
                          print("Folder to move to:")
                          rednet.send(sid, {"MV", fs.combine(path, ls[1][n]), fs.combine(path, read()).."/"..ls[1][n]}, "JMail")
                      end
                  end
               end
            end
          elseif n==4 then
            print("Type current password:")
            local ops = read("*")
            write("New Password:")
            local nps = read("*")
            write("Confirm:")
            if read("*") == nps then
              rednet.send(sid, {"PC", ops, nps}, "JMail")
              if getMsg() then
                print("Success.")
              else
                print("Passchange failed...")
              end
            else
              print("Passwords do not match.")
            end
            sleep(2.5)
          end
        end
      end
    end
  end
  sleep(2.5)
end
